# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cuter_proto_spec.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import cuter_proto_erlang_term_pb2 as cuter__proto__erlang__term__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cuter_proto_spec.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x16\x63uter_proto_spec.proto\x1a\x1d\x63uter_proto_erlang_term.proto\"\xcf\x07\n\x04Spec\x12\x1d\n\x07\x63lauses\x18\x01 \x03(\x0b\x32\x0c.Spec.FunSig\x12\x1f\n\x08typedefs\x18\x02 \x03(\x0b\x32\r.Spec.TypeDef\x1a\x37\n\x07TypeDef\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1e\n\ndefinition\x18\x02 \x01(\x0b\x32\n.Spec.Type\x1a\x37\n\x0bRangeBounds\x12\x13\n\x0blower_bound\x18\x01 \x01(\t\x12\x13\n\x0bupper_bound\x18\x02 \x01(\t\x1a#\n\x0bSegmentSize\x12\t\n\x01m\x18\x01 \x01(\t\x12\t\n\x01n\x18\x02 \x01(\t\x1aZ\n\x06\x46unSig\x12 \n\x08\x63omplete\x18\x01 \x01(\x0b\x32\x0c.Spec.FunDetH\x00\x12!\n\x0bjust_return\x18\x02 \x01(\x0b\x32\n.Spec.TypeH\x00\x42\x0b\n\tsignature\x1aJ\n\x06\x46unDet\x12\x1e\n\nparameters\x18\x01 \x03(\x0b\x32\n.Spec.Type\x12 \n\x0creturn_value\x18\x02 \x01(\x0b\x32\n.Spec.Type\x1a\xb2\x02\n\x04Type\x12\x1b\n\x04type\x18\x01 \x01(\x0e\x32\r.Spec.ErlType\x12\x1e\n\x07literal\x18\x02 \x01(\x0b\x32\x0b.ErlangTermH\x00\x12)\n\x0crange_bounds\x18\x03 \x01(\x0b\x32\x11.Spec.RangeBoundsH\x00\x12)\n\x0csegment_size\x18\x04 \x01(\x0b\x32\x11.Spec.SegmentSizeH\x00\x12 \n\ninner_type\x18\x05 \x01(\x0b\x32\n.Spec.TypeH\x00\x12%\n\x0binner_types\x18\x06 \x01(\x0b\x32\x0e.Spec.TypeListH\x00\x12\x1b\n\x03\x66un\x18\x07 \x01(\x0b\x32\x0c.Spec.FunSigH\x00\x12\x15\n\x0bntuple_size\x18\x08 \x01(\rH\x00\x12\x13\n\ttype_name\x18\t \x01(\tH\x00\x42\x05\n\x03\x61rg\x1a%\n\x08TypeList\x12\x19\n\x05types\x18\x01 \x03(\x0b\x32\n.Spec.Type\"\xeb\x01\n\x07\x45rlType\x12\x07\n\x03\x41NY\x10\x00\x12\x08\n\x04\x41TOM\x10\x01\x12\x10\n\x0c\x41TOM_LITERAL\x10\x02\x12\t\n\x05\x46LOAT\x10\x03\x12\x0b\n\x07INTEGER\x10\x04\x12\x13\n\x0fINTEGER_LITERAL\x10\x05\x12\x08\n\x04LIST\x10\x06\x12\x11\n\rNONEMPTY_LIST\x10\x07\x12\x07\n\x03NIL\x10\x08\x12\r\n\tBITSTRING\x10\t\x12\t\n\x05TUPLE\x10\n\x12\x0c\n\x08TUPLEDET\x10\x0b\x12\t\n\x05UNION\x10\x0c\x12\t\n\x05RANGE\x10\r\x12\x07\n\x03\x46UN\x10\x0e\x12\x08\n\x04\x43ONS\x10\x0f\x12\n\n\x06NTUPLE\x10\x10\x12\x0b\n\x07USERDEF\x10\x11\x62\x06proto3')
  ,
  dependencies=[cuter__proto__erlang__term__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_SPEC_ERLTYPE = _descriptor.EnumDescriptor(
  name='ErlType',
  full_name='Spec.ErlType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ANY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATOM', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATOM_LITERAL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTEGER', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTEGER_LITERAL', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LIST', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NONEMPTY_LIST', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NIL', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BITSTRING', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TUPLE', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TUPLEDET', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNION', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RANGE', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FUN', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONS', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NTUPLE', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USERDEF', index=17, number=17,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=798,
  serialized_end=1033,
)
_sym_db.RegisterEnumDescriptor(_SPEC_ERLTYPE)


_SPEC_TYPEDEF = _descriptor.Descriptor(
  name='TypeDef',
  full_name='Spec.TypeDef',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Spec.TypeDef.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='definition', full_name='Spec.TypeDef.definition', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=185,
)

_SPEC_RANGEBOUNDS = _descriptor.Descriptor(
  name='RangeBounds',
  full_name='Spec.RangeBounds',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='lower_bound', full_name='Spec.RangeBounds.lower_bound', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='upper_bound', full_name='Spec.RangeBounds.upper_bound', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=187,
  serialized_end=242,
)

_SPEC_SEGMENTSIZE = _descriptor.Descriptor(
  name='SegmentSize',
  full_name='Spec.SegmentSize',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='m', full_name='Spec.SegmentSize.m', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n', full_name='Spec.SegmentSize.n', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=279,
)

_SPEC_FUNSIG = _descriptor.Descriptor(
  name='FunSig',
  full_name='Spec.FunSig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='complete', full_name='Spec.FunSig.complete', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='just_return', full_name='Spec.FunSig.just_return', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='signature', full_name='Spec.FunSig.signature',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=281,
  serialized_end=371,
)

_SPEC_FUNDET = _descriptor.Descriptor(
  name='FunDet',
  full_name='Spec.FunDet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameters', full_name='Spec.FunDet.parameters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='return_value', full_name='Spec.FunDet.return_value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=373,
  serialized_end=447,
)

_SPEC_TYPE = _descriptor.Descriptor(
  name='Type',
  full_name='Spec.Type',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='Spec.Type.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='literal', full_name='Spec.Type.literal', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='range_bounds', full_name='Spec.Type.range_bounds', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='segment_size', full_name='Spec.Type.segment_size', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inner_type', full_name='Spec.Type.inner_type', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inner_types', full_name='Spec.Type.inner_types', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fun', full_name='Spec.Type.fun', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ntuple_size', full_name='Spec.Type.ntuple_size', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type_name', full_name='Spec.Type.type_name', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='arg', full_name='Spec.Type.arg',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=450,
  serialized_end=756,
)

_SPEC_TYPELIST = _descriptor.Descriptor(
  name='TypeList',
  full_name='Spec.TypeList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='types', full_name='Spec.TypeList.types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=758,
  serialized_end=795,
)

_SPEC = _descriptor.Descriptor(
  name='Spec',
  full_name='Spec',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='clauses', full_name='Spec.clauses', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='typedefs', full_name='Spec.typedefs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SPEC_TYPEDEF, _SPEC_RANGEBOUNDS, _SPEC_SEGMENTSIZE, _SPEC_FUNSIG, _SPEC_FUNDET, _SPEC_TYPE, _SPEC_TYPELIST, ],
  enum_types=[
    _SPEC_ERLTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=58,
  serialized_end=1033,
)

_SPEC_TYPEDEF.fields_by_name['definition'].message_type = _SPEC_TYPE
_SPEC_TYPEDEF.containing_type = _SPEC
_SPEC_RANGEBOUNDS.containing_type = _SPEC
_SPEC_SEGMENTSIZE.containing_type = _SPEC
_SPEC_FUNSIG.fields_by_name['complete'].message_type = _SPEC_FUNDET
_SPEC_FUNSIG.fields_by_name['just_return'].message_type = _SPEC_TYPE
_SPEC_FUNSIG.containing_type = _SPEC
_SPEC_FUNSIG.oneofs_by_name['signature'].fields.append(
  _SPEC_FUNSIG.fields_by_name['complete'])
_SPEC_FUNSIG.fields_by_name['complete'].containing_oneof = _SPEC_FUNSIG.oneofs_by_name['signature']
_SPEC_FUNSIG.oneofs_by_name['signature'].fields.append(
  _SPEC_FUNSIG.fields_by_name['just_return'])
_SPEC_FUNSIG.fields_by_name['just_return'].containing_oneof = _SPEC_FUNSIG.oneofs_by_name['signature']
_SPEC_FUNDET.fields_by_name['parameters'].message_type = _SPEC_TYPE
_SPEC_FUNDET.fields_by_name['return_value'].message_type = _SPEC_TYPE
_SPEC_FUNDET.containing_type = _SPEC
_SPEC_TYPE.fields_by_name['type'].enum_type = _SPEC_ERLTYPE
_SPEC_TYPE.fields_by_name['literal'].message_type = cuter__proto__erlang__term__pb2._ERLANGTERM
_SPEC_TYPE.fields_by_name['range_bounds'].message_type = _SPEC_RANGEBOUNDS
_SPEC_TYPE.fields_by_name['segment_size'].message_type = _SPEC_SEGMENTSIZE
_SPEC_TYPE.fields_by_name['inner_type'].message_type = _SPEC_TYPE
_SPEC_TYPE.fields_by_name['inner_types'].message_type = _SPEC_TYPELIST
_SPEC_TYPE.fields_by_name['fun'].message_type = _SPEC_FUNSIG
_SPEC_TYPE.containing_type = _SPEC
_SPEC_TYPE.oneofs_by_name['arg'].fields.append(
  _SPEC_TYPE.fields_by_name['literal'])
_SPEC_TYPE.fields_by_name['literal'].containing_oneof = _SPEC_TYPE.oneofs_by_name['arg']
_SPEC_TYPE.oneofs_by_name['arg'].fields.append(
  _SPEC_TYPE.fields_by_name['range_bounds'])
_SPEC_TYPE.fields_by_name['range_bounds'].containing_oneof = _SPEC_TYPE.oneofs_by_name['arg']
_SPEC_TYPE.oneofs_by_name['arg'].fields.append(
  _SPEC_TYPE.fields_by_name['segment_size'])
_SPEC_TYPE.fields_by_name['segment_size'].containing_oneof = _SPEC_TYPE.oneofs_by_name['arg']
_SPEC_TYPE.oneofs_by_name['arg'].fields.append(
  _SPEC_TYPE.fields_by_name['inner_type'])
_SPEC_TYPE.fields_by_name['inner_type'].containing_oneof = _SPEC_TYPE.oneofs_by_name['arg']
_SPEC_TYPE.oneofs_by_name['arg'].fields.append(
  _SPEC_TYPE.fields_by_name['inner_types'])
_SPEC_TYPE.fields_by_name['inner_types'].containing_oneof = _SPEC_TYPE.oneofs_by_name['arg']
_SPEC_TYPE.oneofs_by_name['arg'].fields.append(
  _SPEC_TYPE.fields_by_name['fun'])
_SPEC_TYPE.fields_by_name['fun'].containing_oneof = _SPEC_TYPE.oneofs_by_name['arg']
_SPEC_TYPE.oneofs_by_name['arg'].fields.append(
  _SPEC_TYPE.fields_by_name['ntuple_size'])
_SPEC_TYPE.fields_by_name['ntuple_size'].containing_oneof = _SPEC_TYPE.oneofs_by_name['arg']
_SPEC_TYPE.oneofs_by_name['arg'].fields.append(
  _SPEC_TYPE.fields_by_name['type_name'])
_SPEC_TYPE.fields_by_name['type_name'].containing_oneof = _SPEC_TYPE.oneofs_by_name['arg']
_SPEC_TYPELIST.fields_by_name['types'].message_type = _SPEC_TYPE
_SPEC_TYPELIST.containing_type = _SPEC
_SPEC.fields_by_name['clauses'].message_type = _SPEC_FUNSIG
_SPEC.fields_by_name['typedefs'].message_type = _SPEC_TYPEDEF
_SPEC_ERLTYPE.containing_type = _SPEC
DESCRIPTOR.message_types_by_name['Spec'] = _SPEC

Spec = _reflection.GeneratedProtocolMessageType('Spec', (_message.Message,), dict(

  TypeDef = _reflection.GeneratedProtocolMessageType('TypeDef', (_message.Message,), dict(
    DESCRIPTOR = _SPEC_TYPEDEF,
    __module__ = 'cuter_proto_spec_pb2'
    # @@protoc_insertion_point(class_scope:Spec.TypeDef)
    ))
  ,

  RangeBounds = _reflection.GeneratedProtocolMessageType('RangeBounds', (_message.Message,), dict(
    DESCRIPTOR = _SPEC_RANGEBOUNDS,
    __module__ = 'cuter_proto_spec_pb2'
    # @@protoc_insertion_point(class_scope:Spec.RangeBounds)
    ))
  ,

  SegmentSize = _reflection.GeneratedProtocolMessageType('SegmentSize', (_message.Message,), dict(
    DESCRIPTOR = _SPEC_SEGMENTSIZE,
    __module__ = 'cuter_proto_spec_pb2'
    # @@protoc_insertion_point(class_scope:Spec.SegmentSize)
    ))
  ,

  FunSig = _reflection.GeneratedProtocolMessageType('FunSig', (_message.Message,), dict(
    DESCRIPTOR = _SPEC_FUNSIG,
    __module__ = 'cuter_proto_spec_pb2'
    # @@protoc_insertion_point(class_scope:Spec.FunSig)
    ))
  ,

  FunDet = _reflection.GeneratedProtocolMessageType('FunDet', (_message.Message,), dict(
    DESCRIPTOR = _SPEC_FUNDET,
    __module__ = 'cuter_proto_spec_pb2'
    # @@protoc_insertion_point(class_scope:Spec.FunDet)
    ))
  ,

  Type = _reflection.GeneratedProtocolMessageType('Type', (_message.Message,), dict(
    DESCRIPTOR = _SPEC_TYPE,
    __module__ = 'cuter_proto_spec_pb2'
    # @@protoc_insertion_point(class_scope:Spec.Type)
    ))
  ,

  TypeList = _reflection.GeneratedProtocolMessageType('TypeList', (_message.Message,), dict(
    DESCRIPTOR = _SPEC_TYPELIST,
    __module__ = 'cuter_proto_spec_pb2'
    # @@protoc_insertion_point(class_scope:Spec.TypeList)
    ))
  ,
  DESCRIPTOR = _SPEC,
  __module__ = 'cuter_proto_spec_pb2'
  # @@protoc_insertion_point(class_scope:Spec)
  ))
_sym_db.RegisterMessage(Spec)
_sym_db.RegisterMessage(Spec.TypeDef)
_sym_db.RegisterMessage(Spec.RangeBounds)
_sym_db.RegisterMessage(Spec.SegmentSize)
_sym_db.RegisterMessage(Spec.FunSig)
_sym_db.RegisterMessage(Spec.FunDet)
_sym_db.RegisterMessage(Spec.Type)
_sym_db.RegisterMessage(Spec.TypeList)


# @@protoc_insertion_point(module_scope)
