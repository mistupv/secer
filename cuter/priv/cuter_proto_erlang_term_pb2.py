# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cuter_proto_erlang_term.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='cuter_proto_erlang_term.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x1d\x63uter_proto_erlang_term.proto\"\xcc\x05\n\nErlangTerm\x12\x1e\n\x04type\x18\x01 \x01(\x0e\x32\x10.ErlangTerm.Type\x12\r\n\x05value\x18\x02 \x01(\t\x12\x1d\n\x08subterms\x18\x03 \x03(\x0b\x32\x0b.ErlangTerm\x12\'\n\x06shared\x18\x04 \x03(\x0b\x32\x17.ErlangTerm.SharedEntry\x12&\n\x11improper_list_nil\x18\x05 \x01(\x0b\x32\x0b.ErlangTerm\x12\x12\n\natom_chars\x18\x06 \x03(\x05\x12\x0c\n\x04\x62its\x18\x07 \x03(\x08\x12)\n\x0bmap_entries\x18\x08 \x03(\x0b\x32\x14.ErlangTerm.MapEntry\x12$\n\x06points\x18\t \x03(\x0b\x32\x14.ErlangTerm.FunEntry\x12\x1e\n\totherwise\x18\n \x01(\x0b\x32\x0b.ErlangTerm\x12\r\n\x05\x61rity\x18\x0b \x01(\x05\x1a@\n\x08MapEntry\x12\x18\n\x03key\x18\x01 \x01(\x0b\x32\x0b.ErlangTerm\x12\x1a\n\x05value\x18\x02 \x01(\x0b\x32\x0b.ErlangTerm\x1a\x46\n\x08\x46unEntry\x12\x1e\n\targuments\x18\x01 \x03(\x0b\x32\x0b.ErlangTerm\x12\x1a\n\x05value\x18\x02 \x01(\x0b\x32\x0b.ErlangTerm\x1a:\n\x0bSharedEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1a\n\x05value\x18\x02 \x01(\x0b\x32\x0b.ErlangTerm:\x02\x38\x01\"\xb6\x01\n\x04Type\x12\x0b\n\x07INTEGER\x10\x00\x12\t\n\x05\x46LOAT\x10\x01\x12\x08\n\x04\x41TOM\x10\x02\x12\t\n\x05TUPLE\x10\x03\x12\x08\n\x04LIST\x10\x04\x12\x11\n\rIMPROPER_LIST\x10\x05\x12\x07\n\x03PID\x10\x06\x12\r\n\tREFERENCE\x10\x07\x12\r\n\tBITSTRING\x10\x08\x12\x07\n\x03MAP\x10\t\x12\x07\n\x03\x46UN\x10\n\x12\x15\n\x11SYMBOLIC_VARIABLE\x10\x0b\x12\x0b\n\x07SUBTERM\x10\x0c\x12\x07\n\x03\x41NY\x10\rb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_ERLANGTERM_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='ErlangTerm.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INTEGER', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATOM', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TUPLE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LIST', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMPROPER_LIST', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PID', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REFERENCE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BITSTRING', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAP', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FUN', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYMBOLIC_VARIABLE', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBTERM', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANY', index=13, number=13,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=568,
  serialized_end=750,
)
_sym_db.RegisterEnumDescriptor(_ERLANGTERM_TYPE)


_ERLANGTERM_MAPENTRY = _descriptor.Descriptor(
  name='MapEntry',
  full_name='ErlangTerm.MapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ErlangTerm.MapEntry.key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ErlangTerm.MapEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=369,
  serialized_end=433,
)

_ERLANGTERM_FUNENTRY = _descriptor.Descriptor(
  name='FunEntry',
  full_name='ErlangTerm.FunEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='arguments', full_name='ErlangTerm.FunEntry.arguments', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ErlangTerm.FunEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=435,
  serialized_end=505,
)

_ERLANGTERM_SHAREDENTRY = _descriptor.Descriptor(
  name='SharedEntry',
  full_name='ErlangTerm.SharedEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ErlangTerm.SharedEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ErlangTerm.SharedEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=507,
  serialized_end=565,
)

_ERLANGTERM = _descriptor.Descriptor(
  name='ErlangTerm',
  full_name='ErlangTerm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ErlangTerm.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ErlangTerm.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subterms', full_name='ErlangTerm.subterms', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shared', full_name='ErlangTerm.shared', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='improper_list_nil', full_name='ErlangTerm.improper_list_nil', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='atom_chars', full_name='ErlangTerm.atom_chars', index=5,
      number=6, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bits', full_name='ErlangTerm.bits', index=6,
      number=7, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_entries', full_name='ErlangTerm.map_entries', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='points', full_name='ErlangTerm.points', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='otherwise', full_name='ErlangTerm.otherwise', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arity', full_name='ErlangTerm.arity', index=10,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ERLANGTERM_MAPENTRY, _ERLANGTERM_FUNENTRY, _ERLANGTERM_SHAREDENTRY, ],
  enum_types=[
    _ERLANGTERM_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=750,
)

_ERLANGTERM_MAPENTRY.fields_by_name['key'].message_type = _ERLANGTERM
_ERLANGTERM_MAPENTRY.fields_by_name['value'].message_type = _ERLANGTERM
_ERLANGTERM_MAPENTRY.containing_type = _ERLANGTERM
_ERLANGTERM_FUNENTRY.fields_by_name['arguments'].message_type = _ERLANGTERM
_ERLANGTERM_FUNENTRY.fields_by_name['value'].message_type = _ERLANGTERM
_ERLANGTERM_FUNENTRY.containing_type = _ERLANGTERM
_ERLANGTERM_SHAREDENTRY.fields_by_name['value'].message_type = _ERLANGTERM
_ERLANGTERM_SHAREDENTRY.containing_type = _ERLANGTERM
_ERLANGTERM.fields_by_name['type'].enum_type = _ERLANGTERM_TYPE
_ERLANGTERM.fields_by_name['subterms'].message_type = _ERLANGTERM
_ERLANGTERM.fields_by_name['shared'].message_type = _ERLANGTERM_SHAREDENTRY
_ERLANGTERM.fields_by_name['improper_list_nil'].message_type = _ERLANGTERM
_ERLANGTERM.fields_by_name['map_entries'].message_type = _ERLANGTERM_MAPENTRY
_ERLANGTERM.fields_by_name['points'].message_type = _ERLANGTERM_FUNENTRY
_ERLANGTERM.fields_by_name['otherwise'].message_type = _ERLANGTERM
_ERLANGTERM_TYPE.containing_type = _ERLANGTERM
DESCRIPTOR.message_types_by_name['ErlangTerm'] = _ERLANGTERM

ErlangTerm = _reflection.GeneratedProtocolMessageType('ErlangTerm', (_message.Message,), dict(

  MapEntry = _reflection.GeneratedProtocolMessageType('MapEntry', (_message.Message,), dict(
    DESCRIPTOR = _ERLANGTERM_MAPENTRY,
    __module__ = 'cuter_proto_erlang_term_pb2'
    # @@protoc_insertion_point(class_scope:ErlangTerm.MapEntry)
    ))
  ,

  FunEntry = _reflection.GeneratedProtocolMessageType('FunEntry', (_message.Message,), dict(
    DESCRIPTOR = _ERLANGTERM_FUNENTRY,
    __module__ = 'cuter_proto_erlang_term_pb2'
    # @@protoc_insertion_point(class_scope:ErlangTerm.FunEntry)
    ))
  ,

  SharedEntry = _reflection.GeneratedProtocolMessageType('SharedEntry', (_message.Message,), dict(
    DESCRIPTOR = _ERLANGTERM_SHAREDENTRY,
    __module__ = 'cuter_proto_erlang_term_pb2'
    # @@protoc_insertion_point(class_scope:ErlangTerm.SharedEntry)
    ))
  ,
  DESCRIPTOR = _ERLANGTERM,
  __module__ = 'cuter_proto_erlang_term_pb2'
  # @@protoc_insertion_point(class_scope:ErlangTerm)
  ))
_sym_db.RegisterMessage(ErlangTerm)
_sym_db.RegisterMessage(ErlangTerm.MapEntry)
_sym_db.RegisterMessage(ErlangTerm.FunEntry)
_sym_db.RegisterMessage(ErlangTerm.SharedEntry)


_ERLANGTERM_SHAREDENTRY.has_options = True
_ERLANGTERM_SHAREDENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
