# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cuter_proto_log_entry.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import cuter_proto_erlang_term_pb2 as cuter__proto__erlang__term__pb2
import cuter_proto_spec_pb2 as cuter__proto__spec__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cuter_proto_log_entry.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x1b\x63uter_proto_log_entry.proto\x1a\x1d\x63uter_proto_erlang_term.proto\x1a\x16\x63uter_proto_spec.proto\"\xee\n\n\x08LogEntry\x12\x1c\n\x04type\x18\x01 \x01(\x0e\x32\x0e.LogEntry.Type\x12\x1e\n\targuments\x18\x02 \x03(\x0b\x32\x0b.ErlangTerm\x12\x15\n\ris_constraint\x18\x03 \x01(\x08\x12\x0b\n\x03tag\x18\x04 \x01(\x04\x12\x13\n\x04spec\x18\x05 \x01(\x0b\x32\x05.Spec\"\xea\t\n\x04Type\x12\r\n\tOP_PARAMS\x10\x00\x12\x0b\n\x07OP_SPEC\x10\x01\x12\r\n\tOP_LAMBDA\x10\x02\x12\x18\n\x14OP_EVALUATED_CLOSURE\x10\x03\x12\x1e\n\x1aOP_FRESH_LAMBDA_WITH_ARITY\x10\x04\x12\x1c\n\x18OP_NOT_LAMBDA_WITH_ARITY\x10\x05\x12\x11\n\rOP_GUARD_TRUE\x10\x06\x12\x12\n\x0eOP_GUARD_FALSE\x10\x07\x12\x17\n\x13OP_MATCH_EQUAL_TRUE\x10\x08\x12\x18\n\x14OP_MATCH_EQUAL_FALSE\x10\t\x12\x0f\n\x0bOP_TUPLE_SZ\x10\n\x12\x13\n\x0fOP_TUPLE_NOT_SZ\x10\x0b\x12\x14\n\x10OP_TUPLE_NOT_TPL\x10\x0c\x12\x15\n\x11OP_LIST_NON_EMPTY\x10\r\x12\x11\n\rOP_LIST_EMPTY\x10\x0e\x12\x13\n\x0fOP_LIST_NOT_LST\x10\x0f\x12\x0c\n\x08OP_SPAWN\x10\x10\x12\x0e\n\nOP_SPAWNED\x10\x11\x12\x0f\n\x0bOP_MSG_SEND\x10\x12\x12\x12\n\x0eOP_MSG_RECEIVE\x10\x13\x12\x12\n\x0eOP_MSG_CONSUME\x10\x14\x12\x13\n\x0fOP_UNFOLD_TUPLE\x10\x15\x12\x12\n\x0eOP_UNFOLD_LIST\x10\x16\x12\x0c\n\x08OP_BOGUS\x10\x17\x12\x0c\n\x08OP_FLOAT\x10\x18\x12\x14\n\x10OP_LIST_TO_TUPLE\x10\x19\x12\x14\n\x10OP_TUPLE_TO_LIST\x10\x1a\x12\x11\n\rOP_IS_INTEGER\x10\x1b\x12\x0e\n\nOP_IS_ATOM\x10\x1c\x12\x0f\n\x0bOP_IS_FLOAT\x10\x1d\x12\x0e\n\nOP_IS_LIST\x10\x1e\x12\x0f\n\x0bOP_IS_TUPLE\x10\x1f\x12\x11\n\rOP_IS_BOOLEAN\x10 \x12\x10\n\x0cOP_IS_NUMBER\x10!\x12\x13\n\x0fOP_IS_BITSTRING\x10\"\x12\r\n\tOP_IS_FUN\x10#\x12\x18\n\x14OP_IS_FUN_WITH_ARITY\x10$\x12\x0b\n\x07OP_PLUS\x10%\x12\x0c\n\x08OP_MINUS\x10&\x12\x0c\n\x08OP_TIMES\x10\'\x12\x0b\n\x07OP_RDIV\x10(\x12\x0f\n\x0bOP_IDIV_NAT\x10)\x12\x0e\n\nOP_REM_NAT\x10*\x12\x0c\n\x08OP_UNARY\x10+\x12\n\n\x06OP_POW\x10,\x12\x0c\n\x08OP_TRUNC\x10-\x12\x0f\n\x0bOP_ATOM_NIL\x10.\x12\x10\n\x0cOP_ATOM_HEAD\x10/\x12\x10\n\x0cOP_ATOM_TAIL\x10\x30\x12\t\n\x05OP_HD\x10\x31\x12\t\n\x05OP_TL\x10\x32\x12\x0b\n\x07OP_CONS\x10\x33\x12\x0c\n\x08OP_TCONS\x10\x34\x12\x0c\n\x08OP_EQUAL\x10\x35\x12\x0e\n\nOP_UNEQUAL\x10\x36\x12\r\n\tOP_LT_INT\x10\x37\x12\x0f\n\x0bOP_LT_FLOAT\x10\x38\x12\x12\n\x0eOP_MAKE_BITSTR\x10\x39\x12\x13\n\x0fOP_EMPTY_BITSTR\x10:\x12\x16\n\x12OP_NONEMPTY_BITSTR\x10;\x12\x12\n\x0eOP_CONCAT_SEGS\x10<\x12\x1a\n\x16OP_BITMATCH_CONST_TRUE\x10=\x12\x1b\n\x17OP_BITMATCH_CONST_FALSE\x10>\x12\x18\n\x14OP_BITMATCH_VAR_TRUE\x10?\x12\x19\n\x15OP_BITMATCH_VAR_FALSE\x10@\x12\x0b\n\x07OP_BAND\x10\x41\x12\x0b\n\x07OP_BXOR\x10\x42\x12\n\n\x06OP_BOR\x10\x43\x62\x06proto3')
  ,
  dependencies=[cuter__proto__erlang__term__pb2.DESCRIPTOR,cuter__proto__spec__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_LOGENTRY_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='LogEntry.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OP_PARAMS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_SPEC', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_LAMBDA', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_EVALUATED_CLOSURE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_FRESH_LAMBDA_WITH_ARITY', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_NOT_LAMBDA_WITH_ARITY', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_GUARD_TRUE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_GUARD_FALSE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_MATCH_EQUAL_TRUE', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_MATCH_EQUAL_FALSE', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_TUPLE_SZ', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_TUPLE_NOT_SZ', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_TUPLE_NOT_TPL', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_LIST_NON_EMPTY', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_LIST_EMPTY', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_LIST_NOT_LST', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_SPAWN', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_SPAWNED', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_MSG_SEND', index=18, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_MSG_RECEIVE', index=19, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_MSG_CONSUME', index=20, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_UNFOLD_TUPLE', index=21, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_UNFOLD_LIST', index=22, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_BOGUS', index=23, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_FLOAT', index=24, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_LIST_TO_TUPLE', index=25, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_TUPLE_TO_LIST', index=26, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_INTEGER', index=27, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_ATOM', index=28, number=28,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_FLOAT', index=29, number=29,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_LIST', index=30, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_TUPLE', index=31, number=31,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_BOOLEAN', index=32, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_NUMBER', index=33, number=33,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_BITSTRING', index=34, number=34,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_FUN', index=35, number=35,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IS_FUN_WITH_ARITY', index=36, number=36,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_PLUS', index=37, number=37,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_MINUS', index=38, number=38,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_TIMES', index=39, number=39,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_RDIV', index=40, number=40,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_IDIV_NAT', index=41, number=41,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_REM_NAT', index=42, number=42,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_UNARY', index=43, number=43,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_POW', index=44, number=44,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_TRUNC', index=45, number=45,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_ATOM_NIL', index=46, number=46,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_ATOM_HEAD', index=47, number=47,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_ATOM_TAIL', index=48, number=48,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_HD', index=49, number=49,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_TL', index=50, number=50,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_CONS', index=51, number=51,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_TCONS', index=52, number=52,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_EQUAL', index=53, number=53,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_UNEQUAL', index=54, number=54,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_LT_INT', index=55, number=55,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_LT_FLOAT', index=56, number=56,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_MAKE_BITSTR', index=57, number=57,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_EMPTY_BITSTR', index=58, number=58,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_NONEMPTY_BITSTR', index=59, number=59,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_CONCAT_SEGS', index=60, number=60,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_BITMATCH_CONST_TRUE', index=61, number=61,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_BITMATCH_CONST_FALSE', index=62, number=62,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_BITMATCH_VAR_TRUE', index=63, number=63,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_BITMATCH_VAR_FALSE', index=64, number=64,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_BAND', index=65, number=65,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_BXOR', index=66, number=66,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OP_BOR', index=67, number=67,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=219,
  serialized_end=1477,
)
_sym_db.RegisterEnumDescriptor(_LOGENTRY_TYPE)


_LOGENTRY = _descriptor.Descriptor(
  name='LogEntry',
  full_name='LogEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='LogEntry.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arguments', full_name='LogEntry.arguments', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_constraint', full_name='LogEntry.is_constraint', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tag', full_name='LogEntry.tag', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spec', full_name='LogEntry.spec', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LOGENTRY_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=1477,
)

_LOGENTRY.fields_by_name['type'].enum_type = _LOGENTRY_TYPE
_LOGENTRY.fields_by_name['arguments'].message_type = cuter__proto__erlang__term__pb2._ERLANGTERM
_LOGENTRY.fields_by_name['spec'].message_type = cuter__proto__spec__pb2._SPEC
_LOGENTRY_TYPE.containing_type = _LOGENTRY
DESCRIPTOR.message_types_by_name['LogEntry'] = _LOGENTRY

LogEntry = _reflection.GeneratedProtocolMessageType('LogEntry', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRY,
  __module__ = 'cuter_proto_log_entry_pb2'
  # @@protoc_insertion_point(class_scope:LogEntry)
  ))
_sym_db.RegisterMessage(LogEntry)


# @@protoc_insertion_point(module_scope)
